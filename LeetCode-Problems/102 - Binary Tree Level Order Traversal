Descption :

Given a binary tree, return the level order traversal of its nodes' values. (ie, from left to right, level by level).

For example:
Given binary tree [3,9,20,null,null,15,7],
    3
   / \
  9  20
    /  \
   15   7
return its level order traversal as:
[
  [3],
  [9,20],
  [15,7]
]




/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> levelOrder(TreeNode* root) {
        vector<vector<int>> vct;
        if(!root)
            return vct;
        deque<TreeNode*> qu;
        qu.push_back(root);
        int size;
        while(!qu.empty())
        {
            size = qu.size();
            vector<int> curLevel;
            for(int i = 0;i<size;++i)
            {
                TreeNode * cur = qu.front();
                qu.pop_front();
                curLevel.push_back(cur->val);
                if(cur->left)
                    qu.push_back(cur->left);
                if(cur->right)
                    qu.push_back(cur->right);
            }
            vct.push_back(curLevel);
        }
        return vct;
    }
};

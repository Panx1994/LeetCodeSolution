Descption :

Design a stack that supports push, pop, top, and retrieving the minimum element in constant time.

1.push(x) -- Push element x onto stack.
2.pop() -- Removes the element on top of the stack.
3.top() -- Get the top element.
4.getMin() -- Retrieve the minimum element in the stack.

Example:
MinStack minStack = new MinStack();
minStack.push(-2);
minStack.push(0);
minStack.push(-3);
minStack.getMin();   --> Returns -3.
minStack.pop();
minStack.top();      --> Returns 0.
minStack.getMin();   --> Returns -2.

class MinStack {
public:
    /** initialize your data structure here. */
    stack<int>    st;
    multiset<int> mst;      
    MinStack() {
        mst.clear();
    }
    
    void push(int x) {
        st.push(x);
        mst.insert(x);
    }
    
    void pop() {
        int tar = st.top();
        st.pop();
        mst.erase(mst.find(tar));
    }
    
    int top() {
        return st.top();
    }
    
    int getMin() {
        if(!st.empty())
            return *mst.begin();
    }
};

/**
 * Your MinStack object will be instantiated and called as such:
 * MinStack obj = new MinStack();
 * obj.push(x);
 * obj.pop();
 * int param_3 = obj.top();
 * int param_4 = obj.getMin();
 */

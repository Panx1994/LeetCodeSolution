Descption :

Given a positive integer, output its complement number. The complement strategy is to flip the bits of its binary representation.

Note:
The given integer is guaranteed to fit within the range of a 32-bit signed integer.
You could assume no leading zero bit in the integer’s binary representation.
Example 1:
Input: 5
Output: 2
Explanation: The binary representation of 5 is 101 (no leading zero bits), and its complement is 010. So you need to output 2.
Example 2:
Input: 1
Output: 0
Explanation: The binary representation of 1 is 1 (no leading zero bits), and its complement is 0. So you need to output 0.


//Solution - 476:
//LeetCode : Number Complement
//时间复杂度：O(1)，空间复杂度：O(1)
//二进制补码（不一定是32位），位运算得到一个大于num的数字即可得到其二进制补码

class Solution {
public:
    int findComplement(int num) {
        uint target = 0x1;
        while(target <= num)
            target<<=1;
        return target - num - 1;
    }
};

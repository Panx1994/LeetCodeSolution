Descption :

Given a non-empty binary tree, return the average value of the nodes on each level in the form of an array.
Example 1:
Input:
    3
   / \
  9  20
    /  \
   15   7
Output: [3, 14.5, 11]
Explanation:
The average value of nodes on level 0 is 3,  on level 1 is 14.5, and on level 2 is 11. Hence return [3, 14.5, 11].
Note:
The range of node's value is in the range of 32-bit signed integer.

//Solution - 637:
//LeetCode : Average of Levels in Binary Tree
//时间复杂度：O(n)，空间复杂度：O(1)
//二叉树的层次遍历：每层之上的平均值

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    vector<double> averageOfLevels(TreeNode* root) {
        deque<TreeNode*> qu;
        vector<double> vct;
        qu.push_back(root);
        int size ;
        double sum = 0;
        while(!qu.empty())
        {
            size = qu.size();
            sum = 0;
            for(int i = 1;i<=size;++i)
            {
                TreeNode* cur = qu.front();
                sum += cur->val;
                if(cur->left)
                    qu.push_back(cur->left);
                if(cur->right)
                    qu.push_back(cur->right);
                qu.pop_front();
            }
            vct.push_back(sum/size);
        }
        return vct;
    }
};

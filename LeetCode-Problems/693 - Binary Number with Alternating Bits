Descption :

Given a positive integer, check whether it has alternating bits: namely, if two adjacent bits will always have different values.

Example 1:
Input: 5
Output: True
Explanation:
The binary representation of 5 is: 101

Example 2:
Input: 7
Output: False
Explanation:
The binary representation of 7 is: 111.

Example 3:
Input: 11
Output: False
Explanation:
The binary representation of 11 is: 1011.

Example 4:
Input: 10
Output: True
Explanation:
The binary representation of 10 is: 1010.

//Solution - 693:
//LeetCode : Binary Number with Alternating Bits
//时间复杂度：O(n)，空间复杂度：O(1)
//要求有效的二进制表示法是01间隔的
//这里的做法是：
//取出最低位，向上判断01间隔的性质（当只有最低位时返回true）

class Solution {
public:
    bool hasAlternatingBits(int n) {
        bool ans = true;
        if(n == 1)
            return ans;
        int pre = n % 2,c;
        n /= 2;
        while(n)
        {
            c = n % 2;
            if(c + pre != 1)
                return false;
            else
                pre = c;
            n /= 2;
        }
        return true;
    }
};
